{"version":3,"file":"static/js/468.6d866f2d.chunk.js","mappings":"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","sources":["components/Movie/MovieCard.js","pages/MovieDetailPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"movie-card rounded-lg p-3 bg-slate-800 text-white flex flex-col\">\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\r\n      />\r\n      <h3 className=\"text-xl mb-3 font-bold\">{item.title}</h3>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10 \">\r\n          <span>{new Date(item.release_date).getFullYear()}</span>\r\n          <span>{item.vote_average}</span>\r\n        </div>\r\n        <button\r\n          onClick={() => navigate(`/movie/${item.id}`)}\r\n          className=\"py-4 px-6 bg-pink-500 rounded-lg w-full mt-auto\"\r\n        >\r\n          Watch now\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport useSWR from \"swr\";\r\nimport MovieCard from \"../components/Movie/MovieCard\";\r\nimport { fetcher } from \"../config\";\r\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\nconst MovieDetailPage = () => {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=9dd902b52756efb64c1970b9c817d931&language=en-US`,\r\n    fetcher\r\n  );\r\n\r\n  if (!data) return null;\r\n  const { backdrop_path, poster_path, title, overview, genres } = data;\r\n  return (\r\n    <div className=\"py-10 text-white\">\r\n      <div className=\"relative w-full h-[600px] mb-60\">\r\n        <div className=\"absolute inset-0 opacity-70 bg-black\"></div>\r\n        <div\r\n          className=\"w-full h-full bg-no-repeat bg-cover \"\r\n          style={{\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${backdrop_path})`,\r\n          }}\r\n        ></div>\r\n        <div className=\"w-3/4 h-[400px] rounded-md  absolute mx-auto -translate-y-2/4 left-2/4 -translate-x-2/4\">\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/original/${poster_path}`}\r\n            alt=\"\"\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <h1 className=\"text-center text-4xl font-bold  mb-10\">{title}</h1>\r\n      <p className=\"text-center text-xl max-w-[700px] mx-auto font-semibold mb-10\">\r\n        {overview}\r\n      </p>\r\n      <div className=\"flex items-center justify-center gap-x-10 mb-10\">\r\n        {genres.length > 0 &&\r\n          genres.map((item) => {\r\n            return (\r\n              <span\r\n                className=\"py-2 px-4  border-pink-500 border-2 rounded-md text-pink-500\"\r\n                key={item.id}\r\n              >\r\n                {item.name}\r\n              </span>\r\n            );\r\n          })}\r\n      </div>\r\n      <MovieCredits></MovieCredits>\r\n      <MovieVideo></MovieVideo>\r\n      <MovieSimilar></MovieSimilar>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction MovieCredits() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=9dd902b52756efb64c1970b9c817d931&language=en-US`,\r\n    fetcher\r\n  );\r\n  if (!data) return null;\r\n  const { cast } = data;\r\n  if (!cast || cast.length <= 0) return null;\r\n  return (\r\n    <div className=\"flex justify-center items-center gap-x-5 mb-20\">\r\n      {cast.slice(0, 4).map((item) => {\r\n        return (\r\n          <div className=\"flex flex-col gap-y-3 w-1/4 h-[500px]\" key={item.id}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${item.profile_path}`}\r\n              alt=\"\"\r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n            <p className=\"text-xl text-pink-500 font-semibold\">\r\n              {item.original_name}\r\n            </p>\r\n            <span className=\"text-sm opacity-50\">{item.character}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n  //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\r\n}\r\n\r\nfunction MovieVideo() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=9dd902b52756efb64c1970b9c817d931&language=en-US`,\r\n    fetcher\r\n  );\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n\r\n  return (\r\n    <div className=\"py-10\">\r\n      {results.slice(0, 2).map((item) => {\r\n        return (\r\n          <div className=\"mb-10\" key={item.id}>\r\n            <h4 className=\"text-orange-500 border-2 border-orange-500 inline-block px-4 py-2 mb-5\">\r\n              {item.name}\r\n            </h4>\r\n            <iframe\r\n              width=\"753\"\r\n              height=\"1000\"\r\n              src={`https://www.youtube.com/embed/${item.key}`}\r\n              title=\"YouTube video player\"\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n              className=\"w-full \"\r\n            ></iframe>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieSimilar() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=9dd902b52756efb64c1970b9c817d931&language=en-US`,\r\n    fetcher\r\n  );\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  return (\r\n    <div className=\"movie-list \">\r\n      <h2 className=\"text-2xl font-semibold mb-5\">Similar movies</h2>\r\n      <Swiper spaceBetween={30} slidesPerView={3} grabCursor={true}>\r\n        {results &&\r\n          results.length > 0 &&\r\n          results.map((item) => (\r\n            <SwiperSlide key={item.id}>\r\n              <MovieCard item={item}></MovieCard>\r\n            </SwiperSlide>\r\n          ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n}\r\nexport default MovieDetailPage;\r\n"],"names":["item","navigate","useNavigate","className","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","onClick","id","MovieCredits","movieId","useParams","data","useSWR","fetcher","cast","length","slice","map","profile_path","original_name","character","MovieVideo","results","name","width","height","key","frameBorder","allow","allowFullScreen","MovieSimilar","spaceBetween","slidesPerView","grabCursor","backdrop_path","overview","genres","style","backgroundImage"],"sourceRoot":""}